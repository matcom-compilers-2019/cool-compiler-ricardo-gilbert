//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Cool.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICoolListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class CoolBaseListener : ICoolListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CoolParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CoolParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.classDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDefine([NotNull] CoolParser.ClassDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.classDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDefine([NotNull] CoolParser.ClassDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFeature([NotNull] CoolParser.FeatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFeature([NotNull] CoolParser.FeatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] CoolParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] CoolParser.MethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] CoolParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] CoolParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.formal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal([NotNull] CoolParser.FormalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.formal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal([NotNull] CoolParser.FormalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>new</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew([NotNull] CoolParser.NewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>new</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew([NotNull] CoolParser.NewContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>letIn</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetIn([NotNull] CoolParser.LetInContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>letIn</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetIn([NotNull] CoolParser.LetInContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParens([NotNull] CoolParser.ParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParens([NotNull] CoolParser.ParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] CoolParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] CoolParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isvoid</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsvoid([NotNull] CoolParser.IsvoidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isvoid</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsvoid([NotNull] CoolParser.IsvoidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>addsub</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddsub([NotNull] CoolParser.AddsubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addsub</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddsub([NotNull] CoolParser.AddsubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bitcompl</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitcompl([NotNull] CoolParser.BitcomplContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bitcompl</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitcompl([NotNull] CoolParser.BitcomplContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>while</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] CoolParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>while</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] CoolParser.WhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparer</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparer([NotNull] CoolParser.ComparerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparer</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparer([NotNull] CoolParser.ComparerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dispatchImplicit</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDispatchImplicit([NotNull] CoolParser.DispatchImplicitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dispatchImplicit</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDispatchImplicit([NotNull] CoolParser.DispatchImplicitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt([NotNull] CoolParser.IntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>int</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt([NotNull] CoolParser.IntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>muldiv</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMuldiv([NotNull] CoolParser.MuldivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>muldiv</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMuldiv([NotNull] CoolParser.MuldivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot([NotNull] CoolParser.NotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot([NotNull] CoolParser.NotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] CoolParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] CoolParser.BooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CoolParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>block</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CoolParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] CoolParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>id</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] CoolParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] CoolParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] CoolParser.IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>case</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase([NotNull] CoolParser.CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>case</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase([NotNull] CoolParser.CaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dispatchExplicit</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDispatchExplicit([NotNull] CoolParser.DispatchExplicitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dispatchExplicit</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDispatchExplicit([NotNull] CoolParser.DispatchExplicitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assign</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] CoolParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assign</c>
	/// labeled alternative in <see cref="CoolParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] CoolParser.AssignContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
